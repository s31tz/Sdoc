#!/usr/bin/env perl

use v5.10;
use strict;
use warnings;

our $VERSION = '3.00';

use Sdoc::Core::Program;

# -----------------------------------------------------------------------------

=encoding utf8

=head1 NAME

sdoc - Prozessiere Sdoc-Dokument

=head1 USAGE

sdoc [OPTIONS] [pdf] INPUT.sdoc [OUTPUT.pdf]

sdoc [OPTIONS] html INPUT.sdoc [OUTPUT.html]

sdoc [OPTIONS] mediawiki INPUT.sdoc [OUTPUT.mw]

sdoc [OPTIONS] validate INPUT.sdoc

sdoc [OPTIONS] anchors INPUT.sdoc

sdoc [OPTIONS] links INPUT.sdoc

sdoc [OPTIONS] tree INPUT.sdoc [OUTPUT]

sdoc [OPTIONS] convert INPUT.sdoc2 [OUTPUT.sdoc3]

sdoc [OPTIONS] code-style-names

sdoc [OPTIONS] code-style-page LANG FILE.EXT [OUTPUT.html]

sdoc [OPTIONS] code-style-file NAME [OUTPUT.css]

sdoc [OPTIONS] cleanup

=head1 OPTIONS

=over 4

=item --ansi-color[=BOOL] (Default: siehe ~/.sdoc.conf)

Färbe die Ausgabe mit ANSI Colorcodes ein.

=item --code-style=NAME (Default: siehe ~/.sdoc.conf)

Name des verwendeten Code-Style. Die Option überschreibt die
Dokument-Eigenschaft C<codeStyle>.

=item --convert[=BOOL] (Default: 0)

Konvertiere die Eingabedatei vor der Verarbeitung von Sdoc2 nach
Sdoc3.

=item --css-prefix=PREFIX (Default: siehe ~/.sdoc.conf)

Präfix für die CSS-Klassen des Dokuments.

=item --indent-mode[=BOOL]

Forciere Einrück-Modus (s. C<Document.indentMode>).

=item --pdf-viewer=PROGRAM (Default: siehe ~/.sdoc.conf)

Viewer zum Anzeigen des erzeugten PDF.

=item --section-number-level=N

Forciere die Abschnittsebene, bis zu welcher Abschnitte nummeriert
werden. Mögliche Werte: -2, -1, 0, 1, 2, 3, 4. -2 bedeutet: Die
Abschnitte des Dokuments werden nicht nummeriert.

=item --selector=SELECTOR (Default: '.sdoc-code text')

CSS-Selektor, der den Style-Regeln für das Syntax-Highlighting
vorangestellt wird (s. Operation C<code-style-file>).

=item --shell-escape[=BOOL] (Default: siehe ~/.sdoc.conf)

Muss als Option angegeben werden, wenn externe Programme aufgerufen
werden müssen, um das Dokument zu übersetzen.

=item --table-of-contents[=BOOL]

Forciere das Erzeugen oder Nichterzeugen eines Inhaltsverzeichnisses.

=item --text-viewer=PROGRAM (Default: siehe ~/.sdoc.conf)

Viewer zum Anzeigen von Text im Terminal (z.B. 'less -R').

=item --verbose[=BOOL] (Default: siehe ~/.sdoc.conf)

Gib Laufzeitinformationen aus.

=item --work-dir=DIR (Default: siehe ~/.sdoc.conf)

Wurzelverzeichnis des Verzeichnisbaums, in dem die Sdoc-Quelle übersetzt
werden, da LaTeX viele temporäre Dateien erzeugt. Der Pfad Dir kann
den Platzhalter enthalten

  %U - der Name des aufrufenden Benutzers

Der anfängliche Default ist C</tmp/sdoc/%U>.

=item --help|-h

Diese Hilfe.

=back

=head1 DESCRIPTION

Prozessiere Eingabedatei FILE.sdoc gemäß den angegebenen Optionen.

=head1 REQUIREMENTS

Das Programm nutzt C<latexmk> zum Übersetzen von LaTeX nach PDF.

=head1 FILES

=over 4

=item ~/.sdoc.conf

Konfigurationsdatei mit den Defaults für die meisten
Programmoptionen. Diese können mit den auf der Kommandozeile
angegebenen Optionen überschrieben werden. Aufbau der Datei:

  # Sdoc configuration
  
  ansiColor => 1,
  cacheDir => '/tmp/sdoc/%U',
  codeStyle => 'default',
  cssPrefix => 'sdoc',
  browser => 'google-chrome --new-window',
  pdfViewer => 'evince',
  shellEscape => 0,
  textViewer => 'less -R',
  verbose => 0,
  
  # eof

=back

=head1 EXAMPLES

Wandele nach PDF und zeige das Ergebnis im PDF-Viewer an:

  $ sdoc INPUT.sdoc

Wandele nach PDF und schreibe das Ergebnis in eine Datei:

  $ sdoc INPUT.sdoc OUTPUT.pdf

Wandele nach HTML und zeige das Ergebnis im Browser an:

  $ sdoc html INPUT.sdoc

Wandele nach HTML und schreibe das Ergebnis in eine Datei:

  $ sdoc html INPUT.sdoc OUTPUT.html

Wandele Eingabedatei zuerst von Sdoc2 nach Sdoc3 und dann
nach PDF und zeige das Ergebnis im PDF-Viewer an:

  $ sdoc --convert INPUT.sdoc

Wandele nach LaTeX und zeige das Ergebnis im Text-Viewer an:

  $ sdoc INPUT.sdoc

Wandele nach LaTeX und schreibe das Ergebnis in eine Datei:

  $ sdoc INPUT.sdoc OUTPUT.tex

Wandele nach LaTeX und schreibe das Ergebnis nach STDOUT:

  $ sdoc INPUT.sdoc -

Validiere das Dokument, d.h. prüfe die Sdoc-Datei auf Korrektheit:

  $ sdoc validate INPUT.sdoc

Zeige die Liste der Anker, also die möglichen Ziele eines Verweises:

  $ sdoc anchors INPUT.sdoc

Zeige die Liste der internen und externen Verweise:

  $ sdoc links INPUT.sdoc

Zeige den Parsingbaum des Dokuments im Pager an:

  $ sdoc tree INPUT.sdoc

Schreibe den Parsingbaum des Dokuments in eine Datei:

  $ sdoc tree INPUT.sdoc >OUTPUT.txt

Konvertiere eine Sdoc2-Datei in eine Sdoc3-Datei:

  $ sdoc convert INPUT.sdoc2 OUTPUT.sdoc3

Die Liste der Namen aller verfügbaren Code-Styles:

  $ sdoc code-style-names

Erzeuge eine HTML-Seite mit einer Darstellung aller Code-Styles
für den Programmcode in Datei FILE der Programmiersprache LANG
und zeige die Seite im Browser an:

  $ sdoc code-style-page LANG FILE

Erzeuge eine Style-Datei für das Syntax Highlighting:

  $ sdoc code-style-file emacs emacs.css

Erzeuge im aktuellen Verzeichnis alle Style-Dateien für das
Syntax-Highlighting:

  $ for s in `sdoc code-style-names`; \
      do sdoc code-style-file $s $s.css; done

Lösche (nach Rückfrage) das Cache-Verzeichnis des aufrufenden
Benutzers:

  $ sdoc cleanup

=head1 PROGRAM CLASS

L<Sdoc::Application::Sdoc>

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2019 Frank Seitz

=head1 LICENSE

This code is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

# -----------------------------------------------------------------------------

exit Sdoc::Core::Program->run('Sdoc::Application::Sdoc')->exitCode;

# eof
